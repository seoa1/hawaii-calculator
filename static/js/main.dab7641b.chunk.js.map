{"version":3,"sources":["calc.js","App.js","reportWebVitals.js","index.js"],"names":["Calculator","props","state","values","owners","handleSubmit","bind","this","map","el","i","type","value","onChange","handleChange","onClick","removeClick","defaultChecked","toggleCheckbox","n","e","console","log","setState","event","target","prevState","splice","preventDefault","totals","length","num","j","split","all","alert","toFixed","onSubmit","createUI","addClick","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dab7641b.chunk.js","sourcesContent":["import { Component } from 'react';\n\nexport default class Calculator extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {values:[], owners:[]};\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    createUI(){\n        return this.state.values.map((el, i) => \n            <div key={i}>\n               <input type=\"text\" value={el||''} onChange={this.handleChange.bind(this, i)}/>\n               <input type='button' value='remove' onClick={this.removeClick.bind(this, i)}/><br/>\n               <label>Andrew</label>\n               <input type=\"checkbox\" defaultChecked=\"true\" key={i*10+1} onChange={this.toggleCheckbox.bind(this, i, 0)}/>\n               <label> -------- Jeffrey</label>\n               <input type=\"checkbox\" defaultChecked=\"true\" key={i*10+2} onChange={this.toggleCheckbox.bind(this, i, 1)}/>\n               <label> -------- Adit</label>\n               <input type=\"checkbox\" defaultChecked=\"true\" key={i*10+3} onChange={this.toggleCheckbox.bind(this, i, 2)}/>\n               <label> -------- Nicole</label>\n               <input type=\"checkbox\" defaultChecked=\"true\" key={i*10+4} onChange={this.toggleCheckbox.bind(this, i, 3)}/>\n               <label> -------- Vanessa</label>\n               <input type=\"checkbox\" defaultChecked=\"true\" key={i*10+5} onChange={this.toggleCheckbox.bind(this, i, 4)}/>\n            </div>          \n        )\n     }\n\n     toggleCheckbox(i, n, e) {\n         let owners = [...this.state.owners];\n         console.log(i, n);\n        owners[i][n] = !owners[i][n];\n        this.setState({ owners });\n     }\n     \n     handleChange(i, event) {\n        let values = [...this.state.values];\n        values[i] = event.target.value;\n        this.setState({ values });\n     }\n     \n     addClick(){\n       this.setState(prevState => ({ values: [...prevState.values, ''], owners: [...prevState.owners, [true,true,true,true,true]]}));\n     }\n     \n     removeClick(i){\n        let values = [...this.state.values];\n        let owners = [...this.state.owners];\n        values.splice(i,1);\n        owners.splice(i,1);\n        this.setState({ values, owners });\n     }\n     \n     handleSubmit(event) {\n        event.preventDefault();\n         let totals = [0,0,0,0,0];\n       for (let i=0; i < this.state.values.length; i++) {\n           let num = 0;\n            for (let j=0; j < 5; j++) {\n                if (this.state.owners[i][j]) {\n                    num++;\n                }\n            }\n            let split = this.state.values[i] / num;\n            for (let j=0; j<5; j++) {\n                if (this.state.owners[i][j]) {\n                    totals[j] += split;\n                }\n            }\n       }\n       let all = 0;\n       for (let i=0; i<5; i++) {\n           all += totals[i];\n       }\n       alert(`Amount owed:\\nAndrew: ${totals[0].toFixed(2)}\\nJeffrey: ${totals[1].toFixed(2)}\\nAdit: ${totals[2].toFixed(2)}\\nNicole: ${totals[3].toFixed(2)}\\nVanessa: ${totals[4].toFixed(2)}\\n\\nTotal: ${all.toFixed(2)}`);\n     }\n   \n     render() {\n       return (\n         <form onSubmit={this.handleSubmit}>\n             {this.createUI()}       \n             <br/> \n             <input type='button' value='Add Expense' onClick={this.addClick.bind(this)}/>\n             <input type=\"submit\" value=\"Submit\" />\n         </form>\n       );\n     }\n}\n\n","import './App.css';\nimport Calculator from './calc';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}